from scipy import stats
from statsmodels.stats.multicomp import pairwise_tukeyhsd, MultiComparison

########################################################################################################################
# exp 2

# random = [[0.5124046098119737, 0.46383454153273856, 0.3833346964925912, 0.5954233843000512, 0.8499390018688264, 0.8695934482279941, 0.40836145815828473, 0.6314630667155077, 0.5213475698762922, 0.7945536146384311, 0.693454605169727, 0.7657308810515652, 0.6651086414813747, 0.7045384190972426, 0.37902895508567164, 0.7035392032380366, 0.4829701806271294, 0.8385824865309882, 0.7768104552418007, 0.8032744894286387, 0.6169253009796329], [0.7499500376757644, 0.8536576866420068, 1.0, 1.0, 1.0, 1.0, 0.5716382234844766, 0.8994958745137731, 0.8929825063459932, 0.8403662589558447, 0.9324934452177275, 0.37849748654785975, 0.710315480155959, 0.7029625110452754, 1.0, 1.0, 1.0, 0.9409514845176611, 0.34841366020424647, 0.7595554174410167, 0.9497104701761564, 0.8202349148028018, 1.0, 1.0, 0.8327806452806453, 0.3913969078133751, 0.673327401084754, 0.8784840345985856, 1.0, 1.0, 1.0, 1.0]]
# ft = [[0.4475362705546852, 0.37477903524001605, 0.2385864947268456, 0.561107686893958, 0.8362091279415842, 0.865169153992603, 0.27555584083576856, 0.6807674631561272, 0.42415222657669654, 0.7515778994071011, 0.6505855287584636, 0.7585586839996852, 0.6085083917466093, 0.6753381343354605, 0.38518539801972035, 0.5590242633495757, 0.6030634654032917, 0.8454711707766335, 0.8072567625526039, 0.7844227294762527, 0.7182814149410127], [0.7631740362055717, 0.8804117661473556, 1.0, 1.0, 1.0, 1.0, 0.6002122380439093, 0.8996391547049443, 0.8948913476874003, 0.94518424010665, 0.9398924387338667, 0.80780978739555, 0.7319886356101893, 0.7276928856802369, 1.0, 1.0, 1.0, 0.9673791321474984, 0.3806553452712278, 0.8162113929767439, 0.9234378249793626, 0.8135273079539522, 1.0, 1.0, 0.9347041847041847, 0.7494221262054079, 0.6738640129864973, 0.8806481712731712, 1.0, 1.0, 1.0, 1.0]]
# knn = [[0.7460897121079827, 0.5212838768389759, 0.23795310034345124, 0.5520548622994405, 0.8371577762431737, 0.9086461371565215, 0.4993425830967756, 0.8866402043155436, 0.5267026967334175, 0.8802274676476636, 0.6884643166372515, 0.751410685213914, 0.5460907907404914, 0.9395511202997834, 0.42225134979972445, 0.5958310601491854, 0.23303071694992059, 0.937550602614914, 0.939285059701423, 0.8192627735826267, 0.5287083486605967], [0.8134325189235161, 0.8870632991806868, 1.0, 1.0, 1.0, 1.0, 0.6523517267937892, 0.8939874195292152, 0.915192038353803, 0.8800194599120071, 0.9685083677714402, 0.4443676912087645, 0.721792368361395, 0.7285730251939548, 1.0, 1.0, 1.0, 0.9439658524819343, 0.3834834742256022, 0.7745621584463662, 0.9733567358567359, 0.8179672078928494, 1.0, 1.0, 0.8417473049825991, 0.5744360938530185, 0.7131574675324676, 0.9177609427609427, 1.0, 1.0, 1.0, 1.0]]
# wd = [[0.8628083726323109, 0.6239922802554733, 0.841844193817878, 0.7511071196873053, 1.0, 0.9257572317460089, 0.9965277777777778, 0.9564102564102563, 0.47802291628689936, 0.7621504316053176, 0.7204793015223901, 0.7890158986406979, 0.9630157394046283, 0.5077492087219782, 0.9557671957671957, 0.6479025092124937, 0.9914021164021163, 0.9777667514374171, 1.0, 0.9368467841682127, 0.7795440181424919], [0.9173788232268082, 0.8958402779620067, 1.0, 1.0, 1.0, 1.0, 0.7220469518548179, 0.971875, 0.96484375, 0.896986100790764, 0.991243068799887, 0.9807898306599605, 0.7451641153429479, 0.7281456101887928, 1.0, 1.0, 1.0, 0.9534902432586095, 0.409379202543386, 0.9701008458791396, 0.887741024709979, 0.7872046451640492, 1.0, 1.0, 0.862909799751905, 0.8709246031746032, 0.9070281484368171, 1.0, 1.0, 1.0, 1.0, 1.0]]
# # positive MAPs
# f_value, p_value = stats.f_oneway(random[0], ft[0], knn[0], wd[0])
# print(f_value, p_value)
# # F(3, 17) = 4.175146032700572 (p = 0.008453283309174461)
#
# num_tests = len(random[0])
# indices = [0] * num_tests + [1] * num_tests + [2] * num_tests + [3] * num_tests
#
# mc = MultiComparison(random[0] + ft[0] + knn[0] + wd[0], indices)
# result = mc.tukeyhsd()
# print(result)
# print(mc.groupsunique)
#
# # negative MAPs
# f_value, p_value = stats.f_oneway(random[1], ft[1], knn[1], wd[1])
# print(f_value, p_value)
# # F(3, 28) = 0.8848715300970017 ( p = 0.4510163796360517)
#
# num_tests = len(random[1])
# indices = [0] * num_tests + [1] * num_tests + [2] * num_tests + [3] * num_tests
#
# mc = MultiComparison(random[1] + ft[1] + knn[1] + wd[1], indices)
# result = mc.tukeyhsd()
# print(result)
# print(mc.groupsunique)
#
# 5.90186735737144 0.0010855945532864473
# Multiple Comparison of Means - Tukey HSD, FWER=0.05
# ===================================================
# group1 group2 meandiff p-adj   lower  upper  reject
# ---------------------------------------------------
#      0      1   -0.029    0.9 -0.1795 0.1215  False
#      0      2   0.0256    0.9  -0.125 0.1761  False
#      0      3   0.1909 0.0071  0.0403 0.3414   True
#      1      2   0.0546  0.752 -0.0959 0.2051  False
#      1      3   0.2199 0.0014  0.0693 0.3704   True
#      2      3   0.1653 0.0257  0.0147 0.3158   True
# ---------------------------------------------------
# [0 1 2 3]
# 1.155752851375878 0.3295059228833687
# Multiple Comparison of Means - Tukey HSD, FWER=0.05
# ===================================================
# group1 group2 meandiff p-adj   lower  upper  reject
# ---------------------------------------------------
#      0      1   0.0376 0.7626 -0.0674 0.1427  False
#      0      2   0.0225    0.9 -0.0826 0.1275  False
#      0      3    0.073 0.2739 -0.0321 0.1781  False
#      1      2  -0.0152    0.9 -0.1202 0.0899  False
#      1      3   0.0354 0.7934 -0.0697 0.1404  False
#      2      3   0.0505 0.5835 -0.0545 0.1556  False
# ---------------------------------------------------
# [0 1 2 3]


########################################################################################################################
# exp 1

# random = [[0.4432630991770342, 0.3957633044417937, 0.3023628230628575, 0.5399275239824888, 0.8859823331928228, 0.8720141396784522, 0.29148060245786184, 0.5877282468663477, 0.6215496016385799, 0.5911201546418264, 0.5175662846817638, 0.7959942856896752, 0.6133153206911298, 0.8120038966109706, 0.6653443885092308, 0.7769197859908176, 0.4145585757265324, 0.6553532080765432, 0.3759568847045628, 0.7913317221241098, 0.8466476484050697, 0.8344966876227242, 0.635173615204176], [0.7337740862051295, 0.8543768344762157, 1.0, 0.6030515517396523, 0.8542620175447186, 0.91105988462074, 0.8264980772992111, 0.8188039317771196, 0.8209466452389528, 0.9331251582120651, 0.36207887682016265, 0.7042099632307383, 0.7163932513942727, 0.9832866362033029, 0.3394272868152972, 0.747883827850769, 0.8783034298814743, 0.827002887136822, 0.7456989195142789, 0.3108752200767164, 0.6507716682826976, 0.8763177467956881, 1.0]]
# ft = [[0.41461560616979215, 0.6587518032037356, 0.6830309391712901, 0.8618168257317252, 1.0, 1.0, 0.24908409979096807, 0.9869825708061002, 0.9715270483193277, 0.9583442265795206, 0.42750479731008173, 0.7642239662469158, 0.5610863883591156, 0.79196869203007, 0.9563764630431297, 0.9981060606060606, 0.3658015081467093, 0.5925654090627069, 0.3471356524929797, 0.9866600508624502, 1.0, 0.7695581804369398, 0.5863126334015328], [0.9385583945291207, 0.9548314366609822, 1.0, 0.8318919395373879, 0.9923026315789475, 0.9543859649122807, 0.7745430201020739, 0.9920478132978132, 0.9913216066341066, 0.9911642369975703, 0.7700057009267535, 0.7318000013971838, 0.7409035089282445, 0.9846575543797766, 0.37471382291312627, 0.9810864815534577, 0.9830345335015098, 0.965966492754833, 0.9550865800865801, 0.9522947731281063, 0.9442168890620902, 1.0, 1.0]]
# knn = [[0.6858671117492843, 0.4627955398594344, 0.2544595105998615, 0.7836049262396264, 0.9507497909808833, 0.7773761823139403, 0.6506726654575596, 0.5951419495571563, 0.6467612139763248, 0.7216985953018342, 0.7311942741417723, 0.8672101090150627, 0.6355217569121312, 0.8551866512369971, 0.8827112085445419, 0.9766684704184705, 0.9047430122146325, 0.6937990028790213, 0.9415424044861609, 0.9813898841120847, 0.9141738345731246, 0.9538361944313059, 0.93904863464202], [0.9251788447544644, 0.9500743331065157, 1.0, 0.8162831282331983, 0.9333928571428572, 0.9223417207792208, 0.9561960272069789, 0.8034246248529525, 0.8217482731741608, 0.9184498943561121, 0.7780114218188263, 0.7333929354526927, 0.8067169917187716, 0.9825995901434498, 0.6269305902205891, 0.9760804077929277, 0.9937047033538262, 0.9831878422452283, 0.8517857142857143, 0.9745142178395767, 0.9063260582010582, 0.8819696969696971, 1.0]]
# wd = [[0.9705207977971294, 0.8556788447635304, 0.8928350970017638, 0.8122376465929831, 1.0, 0.966136226031737, 1.0, 0.9277444488381988, 0.9191457558645059, 0.9651282051282051, 0.7479909670267458, 0.7803230398829265, 0.5776145571600118, 0.8312482548074, 0.9563764630431297, 0.9180217509762965, 0.9579841269841269, 0.8190797960317117, 0.9948412698412697, 0.9866600508624502, 0.9655765591410282, 0.9368467841682127, 0.8413174179049904], [0.9776744071091112, 0.975404360623526, 1.0, 0.8609056949189146, 0.871875, 0.9637731481481483, 0.9379613496883235, 0.9696367526873789, 0.9696711425142418, 0.9911642369975703, 0.9841662526186337, 0.7225388609556475, 0.7455755267252623, 0.9859991800488876, 0.38272958200783275, 0.9952741702741703, 0.9008181568746585, 0.965966492754833, 0.9325597242263909, 0.8362806637806638, 0.9442168890620902, 0.8777722277722277, 1.0]]
# # positive MAP
# f_value, p_value = stats.f_oneway(random[0], ft[0], knn[0], wd[0])
# print(f_value, p_value)
# # F(3, 19) = 4.175146032700572 (p = 0.008453283309174461)
#
# num_tests = len(random[0])
# indices = [0] * num_tests + [1] * num_tests + [2] * num_tests + [3] * num_tests
#
# mc = MultiComparison(random[0] + ft[0] + knn[0] + wd[0], indices)
# result = mc.tukeyhsd()
# print(result)
# print(mc.groupsunique)
#
# # negative MAPs
# f_value, p_value = stats.f_oneway(random[1], ft[1], knn[1], wd[1])
# print(f_value, p_value)
# # F(3, 28) = 0.8848715300970017 ( p = 0.4510163796360517)
#
# num_tests = len(random[1])
# indices = [0] * num_tests + [1] * num_tests + [2] * num_tests + [3] * num_tests
#
# mc = MultiComparison(random[1] + ft[1] + knn[1] + wd[1], indices)
# result = mc.tukeyhsd()
# print(result)
# print(mc.groupsunique)

# 8.429229416589546 5.5123699497233696e-05
# Multiple Comparison of Means - Tukey HSD, FWER=0.05
# ===================================================
# group1 group2 meandiff p-adj   lower  upper  reject
# ---------------------------------------------------
#      0      1   0.1159  0.165 -0.0294 0.2612  False
#      0      2   0.1539 0.0336  0.0086 0.2993   True
#      0      3   0.2764  0.001  0.1311 0.4217   True
#      1      2    0.038    0.9 -0.1073 0.1834  False
#      1      3   0.1605 0.0244  0.0152 0.3058   True
#      2      3   0.1225 0.1291 -0.0228 0.2678  False
# ---------------------------------------------------
# [0 1 2 3]
# 5.081251295084159 0.0027245319456615825
# Multiple Comparison of Means - Tukey HSD, FWER=0.05
# ===================================================
# group1 group2 meandiff p-adj   lower  upper  reject
# ---------------------------------------------------
#      0      1   0.1438 0.0082  0.0286 0.2589   True
#      0      2   0.1324 0.0176  0.0172 0.2475   True
#      0      3   0.1432 0.0085  0.0281 0.2584   True
#      1      2  -0.0114    0.9 -0.1266 0.1037  False
#      1      3  -0.0006    0.9 -0.1157 0.1146  False
#      2      3   0.0109    0.9 -0.1043  0.126  False
# ---------------------------------------------------
# [0 1 2 3]


########################################################################################################################
# exp 4

# random = [[0.5281287545226627, 0.5802842150985549, 0.5801544192232531, 0.5380889987723487, 0.571464193049299, 0.6209858381895618, 0.5666528662936969, 0.6004534060670612, 0.5702364925633475, 0.607162293523639], [0.8744615355009435, 0.8678367527157894, 0.8446189678798148, 0.8487294673924094, 0.8653040202060839, 0.861983222041921, 0.8313088308628644, 0.8592309112457862, 0.8388560273127723, 0.8529678957225956]]
# ft = [[0.5599711359320896, 0.6125622392494293, 0.5669148539380034, 0.4991029876702737, 0.5581422056022172, 0.6112490150167269, 0.5526574646590222, 0.6086260255354349, 0.5531778277550073, 0.6205854298191932], [0.9015977927380155, 0.9037088009022723, 0.8785529338489891, 0.8809881911124575, 0.890995083276282, 0.8780657399891525, 0.8808234921771836, 0.889269942390153, 0.8713877272561589, 0.8792439314413057]]
# knn = [[0.6317787116566924, 0.6237862223169849, 0.5954566912011358, 0.5687012954325161, 0.6686651989551602, 0.7298312314316623, 0.6381315050352104, 0.6524600528945801, 0.6959790819890331, 0.6343555583882524], [0.933207135641704, 0.9338089675609307, 0.9086433480661855, 0.9227410972302228, 0.9274507321842446, 0.934956665387302, 0.9261804181206784, 0.9252287161178729, 0.9305050721642965, 0.9083104288900056]]
# wd = [[0.8700338212284416, 0.8852201697086267, 0.7850712848272807, 0.8035781938084706, 0.8598372328975464, 0.8777452728486389, 0.8460300980393564, 0.8148625633790811, 0.8435547609822288, 0.8228809958457172], [0.9544198881571657, 0.9571298900180086, 0.9280081499116852, 0.9512867434012011, 0.943968172459643, 0.944055898090407, 0.9421412359233688, 0.9243034731497273, 0.9312556650051637, 0.9295981652045885]]
#
# # positive MAPs
# f_value, p_value = stats.f_oneway(random[0], ft[0], knn[0], wd[0])
# print(f_value, p_value)
#
# num_tests = len(random[0])
# indices = [0] * num_tests + [1] * num_tests + [2] * num_tests + [3] * num_tests
#
# mc = MultiComparison(random[0] + ft[0] + knn[0] + wd[0], indices)
# result = mc.tukeyhsd()
# print(result)
# print(mc.groupsunique)
#
# # negative MAPs
# f_value, p_value = stats.f_oneway(random[1], ft[1], knn[1], wd[1])
# print(f_value, p_value)
#
# num_tests = len(random[1])
# indices = [0] * num_tests + [1] * num_tests + [2] * num_tests + [3] * num_tests
#
# mc = MultiComparison(random[1] + ft[1] + knn[1] + wd[1], indices)
# result = mc.tukeyhsd()
# print(result)
# print(mc.groupsunique)

# 112.93278881061933 2.2560198496313988e-18
# Multiple Comparison of Means - Tukey HSD, FWER=0.05
# ===================================================
# group1 group2 meandiff p-adj   lower  upper  reject
# ---------------------------------------------------
#      0      1  -0.0021    0.9 -0.0471 0.0429  False
#      0      2   0.0676 0.0015  0.0225 0.1126   True
#      0      3   0.2645  0.001  0.2195 0.3095   True
#      1      2   0.0696  0.001  0.0246 0.1146   True
#      1      3   0.2666  0.001  0.2216 0.3116   True
#      2      3    0.197  0.001   0.152  0.242   True
# ---------------------------------------------------
# [0 1 2 3]
# 114.33811737952503 1.8456154769642495e-18
# Multiple Comparison of Means - Tukey HSD, FWER=0.05
# ==================================================
# group1 group2 meandiff p-adj  lower  upper  reject
# --------------------------------------------------
#      0      1   0.0309  0.001 0.0171 0.0448   True
#      0      2   0.0706  0.001 0.0567 0.0844   True
#      0      3   0.0861  0.001 0.0722    0.1   True
#      1      2   0.0396  0.001 0.0258 0.0535   True
#      1      3   0.0552  0.001 0.0413  0.069   True
#      2      3   0.0155 0.0234 0.0016 0.0294   True
# --------------------------------------------------
# [0 1 2 3]

########################################################################################################################
# exp 4 ablation

# wd = [[0.8700338212284416, 0.8852201697086267, 0.7850712848272807, 0.8035781938084706, 0.8598372328975464, 0.8777452728486389, 0.8460300980393564, 0.8148625633790811, 0.8435547609822288, 0.8228809958457172], [0.9544198881571657, 0.9571298900180086, 0.9280081499116852, 0.9512867434012011, 0.943968172459643, 0.944055898090407, 0.9421412359233688, 0.9243034731497273, 0.9312556650051637, 0.9295981652045885]]
# wide = [[0.7651034044366167, 0.8232056812082731, 0.718993857496655, 0.7206365213930227, 0.7522268566786802, 0.8022572656760653, 0.7793854526045398, 0.7507300279611371, 0.8063759995984915, 0.7376341141302759], [0.9504837878509691, 0.9534861884491566, 0.9208879264116845, 0.9463676285857987, 0.9423277594530387, 0.9357009423475656, 0.9429113139655769, 0.9210267380859599, 0.9300333830270371, 0.9225163496951188]]
# no_states = [[0.8516457893233996, 0.7801732818245959, 0.7219100674026084, 0.7973354771051896, 0.8027563037802335, 0.8462557232604978, 0.7754370311562298, 0.7992239202702109, 0.7963495462469506, 0.8349381039630397], [0.9545704619484153, 0.9515173276029029, 0.9236832923196687, 0.9478959902204402, 0.9433234558502251, 0.9275861424315784, 0.9470973346679242, 0.9297825586899329, 0.932829814938571, 0.9326527662868829]]
# no_objects = [[0.8291381156170194, 0.8693705239898468, 0.8489877593794799, 0.7898843681983697, 0.8246285032125039, 0.8022114989845115, 0.8059012875948429, 0.8390930574187769, 0.8617073939306708, 0.816573018901146], [0.955305451173031, 0.952471950578018, 0.9245864999178953, 0.9490108070628409, 0.9425289433616376, 0.9298474810877114, 0.9393130864089608, 0.9261242530034418, 0.9393516087601625, 0.9272863187414477]]
# no_tasks = [[0.7172649544607298, 0.7306078566372798, 0.6878131477388617, 0.6350351171124579, 0.766159235875591, 0.7417222706558357, 0.7563360414845088, 0.752221006137288, 0.7809220005793707, 0.7269572354491203], [0.9467595244862949, 0.9528005265890739, 0.9158983397909346, 0.9449344335960053, 0.9385912946049034, 0.9368076923396605, 0.9431709671664067, 0.9226925528283648, 0.9397009424800157, 0.9198654421516518]]
#
# # # positive MAPs
# f_value, p_value = stats.f_oneway(wd[0], wide[0], no_states[0], no_objects[0], no_tasks[0])
# print(f_value, p_value)
#
# num_tests = len(wd[0])
# indices = [0] * num_tests + [1] * num_tests + [2] * num_tests + [3] * num_tests + [4] * num_tests
#
# mc = MultiComparison(wd[0]+wide[0]+no_states[0]+no_objects[0]+no_tasks[0], indices)
# result = mc.tukeyhsd()
# print(result)
# print(mc.groupsunique)
#
# # pairwise comparison
# print(stats.ttest_rel(wd[0], wide[1]))
# print(stats.ttest_rel(wd[0], no_states[1]))
# print(stats.ttest_rel(wd[0], no_objects[1]))
# print(stats.ttest_rel(wd[0], no_tasks[1]))

# 16.461534188511667 2.2304691830460835e-08
# Multiple Comparison of Means - Tukey HSD, FWER=0.05
# ====================================================
# group1 group2 meandiff p-adj   lower   upper  reject
# ----------------------------------------------------
#      0      1  -0.0752  0.001 -0.1206 -0.0298   True
#      0      2  -0.0403 0.1041 -0.0857  0.0051  False
#      0      3  -0.0121    0.9 -0.0575  0.0333  False
#      0      4  -0.1114  0.001 -0.1568  -0.066   True
#      1      2   0.0349 0.2033 -0.0105  0.0804  False
#      1      3   0.0631 0.0024  0.0177  0.1085   True
#      1      4  -0.0362 0.1762 -0.0816  0.0093  False
#      2      3   0.0281 0.4098 -0.0173  0.0736  False
#      2      4  -0.0711  0.001 -0.1165 -0.0257   True
#      3      4  -0.0992  0.001 -0.1447 -0.0538   True
# ----------------------------------------------------
# [0 1 2 3 4]
# Ttest_relResult(statistic=-11.155520211189817, pvalue=1.4300316873370712e-06)
# Ttest_relResult(statistic=-10.403425975635962, pvalue=2.5720935720374675e-06)
# Ttest_relResult(statistic=-10.586882759146727, pvalue=2.2215642254851883e-06)
# Ttest_relResult(statistic=-11.431110314000351, pvalue=1.1632713535628302e-06)

